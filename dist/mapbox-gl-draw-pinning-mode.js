var mapboxGlDrawPinningMode=function(e){"use strict";function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var t=r(MapboxDraw.modes.simple_select);const o="Feature",n="Point",i="draw.update";var a={enable(e){setTimeout((()=>{e.map&&e.map.doubleClickZoom&&e._ctx&&e._ctx.store&&e._ctx.store.getInitialConfigValue&&e._ctx.store.getInitialConfigValue("doubleClickZoom")&&e.map.doubleClickZoom.enable()}),0)},disable(e){setTimeout((()=>{e.map&&e.map.doubleClickZoom&&e.map.doubleClickZoom.disable()}),0)}};function s(e,r,t){if(!(o=t=t||{})||o.constructor!==Object)throw new Error("options is invalid");var o,n=t.bbox,i=t.id;if(void 0===e)throw new Error("geometry is required");if(r&&r.constructor!==Object)throw new Error("properties must be an Object");n&&l(n),i&&function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}(i);var a={type:"Feature"};return i&&(a.id=i),n&&(a.bbox=n),a.properties=r||{},a.geometry=e,a}function u(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}function l(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!u(e))throw new Error("bbox must only contain numbers")}))}function c(e){l(e);var r=Number(e[0]),t=Number(e[1]),o=Number(e[2]),n=Number(e[3]);if(6===e.length)throw new Error("@turf/bbox-polygon does not support BBox with 6 positions");var i=[r,t];return function(e,r,t){if(!e)throw new Error("coordinates is required");for(var o=0;o<e.length;o++){var n=e[o];if(n.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var i=0;i<n[n.length-1].length;i++){if(0===o&&0===i&&!u(n[0][0])||!u(n[0][1]))throw new Error("coordinates must contain numbers");if(n[n.length-1][i]!==n[0][i])throw new Error("First and last Position are not equivalent.")}}return s({type:"Polygon",coordinates:e},r,t)}([[i,[o,t],[o,n],[r,n],i]])}function f(e,r,t){if(null!==e)for(var o,n,i,a,s,u,l,c,d=0,h=0,g=e.type,p="FeatureCollection"===g,m="Feature"===g,w=p?e.features.length:1,y=0;y<w;y++){s=(c=!!(l=p?e.features[y].geometry:m?e.geometry:e)&&"GeometryCollection"===l.type)?l.geometries.length:1;for(var b=0;b<s;b++){var v=0,E=0;if(null!==(a=c?l.geometries[b]:l)){u=a.coordinates;var x=a.type;switch(d=!t||"Polygon"!==x&&"MultiPolygon"!==x?0:1,x){case null:break;case"Point":r(u,h,y,v,E),h++,v++;break;case"LineString":case"MultiPoint":for(o=0;o<u.length;o++)r(u[o],h,y,v,E),h++,"MultiPoint"===x&&v++;"LineString"===x&&v++;break;case"Polygon":case"MultiLineString":for(o=0;o<u.length;o++){for(n=0;n<u[o].length-d;n++)r(u[o][n],h,y,v,E),h++;"MultiLineString"===x&&v++,"Polygon"===x&&E++}"Polygon"===x&&v++;break;case"MultiPolygon":for(o=0;o<u.length;o++){for("MultiPolygon"===x&&(E=0),n=0;n<u[o].length;n++){for(i=0;i<u[o][n].length-d;i++)r(u[o][n][i],h,y,v,E),h++;E++}v++}break;case"GeometryCollection":for(o=0;o<a.geometries.length;o++)f(a.geometries[o],r,t);break;default:throw new Error("Unknown Geometry Type")}}}}}function d(e){var r=[];return f(e,(function(e){r.push(e)})),r}function h(e){if(!e)throw new Error("obj is required");var r;if(e.length?r=e:e.coordinates?r=e.coordinates:e.geometry&&e.geometry.coordinates&&(r=e.geometry.coordinates),r)return g(r),r;throw new Error("No valid coordinates")}function g(e){if(e.length>1&&u(e[0])&&u(e[1]))return!0;if(Array.isArray(e[0])&&e[0].length)return g(e[0]);throw new Error("coordinates must only contain numbers")}function p(e,r,t){if("object"!=typeof(t=t||{}))throw new Error("options is invalid");var o=t.ignoreBoundary;if(!e)throw new Error("point is required");if(!r)throw new Error("polygon is required");var n=function(e){if(!e)throw new Error("obj is required");var r=h(e);if(r.length>1&&u(r[0])&&u(r[1]))return r;throw new Error("Coordinate is not a valid Point")}(e),i=h(r),a=r.geometry?r.geometry.type:r.type,s=r.bbox;if(s&&!1===function(e,r){return r[0]<=e[0]&&r[1]<=e[1]&&r[2]>=e[0]&&r[3]>=e[1]}(n,s))return!1;"Polygon"===a&&(i=[i]);for(var l=0,c=!1;l<i.length&&!c;l++)if(m(n,i[l][0],o)){for(var f=!1,d=1;d<i[l].length&&!f;)m(n,i[l][d],!o)&&(f=!0),d++;f||(c=!0)}return c}function m(e,r,t){var o=!1;r[0][0]===r[r.length-1][0]&&r[0][1]===r[r.length-1][1]&&(r=r.slice(0,r.length-1));for(var n=0,i=r.length-1;n<r.length;i=n++){var a=r[n][0],s=r[n][1],u=r[i][0],l=r[i][1];if(e[1]*(a-u)+s*(u-e[0])+l*(e[0]-a)==0&&(a-e[0])*(u-e[0])<=0&&(s-e[1])*(l-e[1])<=0)return!t;s>e[1]!=l>e[1]&&e[0]<(u-a)*(e[1]-s)/(l-s)+a&&(o=!o)}return o}const{onMouseDown:w,onMouseUp:y,onDrag:b,fireUpdate:v,clickAnywhere:E,...x}=t.default,P={originalOnMouseDown:w,originalOnMouseUp:y,originalOnDrag:b,originalFireUpdate:v,originalClickAnywhere:E,...x};return P.onSetup=function(){const e=this.getSelected();this.clearSelectedFeatures(),a.disable(this);const r={map:this.map,draw:this._ctx.api,selectedFeatures:e,selectedPointID:null},t=()=>{const e=(()=>{const e=r.map,t=e.getCanvas(),o=t.width,n=t.height,i=(e.unproject([0,0]).toArray(),e.unproject([o,0]).toArray());e.unproject([o,n]).toArray();return c([e.unproject([0,n]).toArray(),i].flat())})(),t=[],i=r.draw.getAll();i.features=i.features.filter((r=>d(r).some(((r,t)=>p(r,e)))));const a=this;i.features.forEach((e=>{d(e).forEach(((r,i)=>{const a=t.findIndex((e=>{const t=e.vertex.coordinates;return t[0]===r[0]&&t[1]===r[1]}));-1!==a?t[a].vertex.properties.featureIds.push([e.id,i]):t.push({vertex:this.newFeature({type:o,properties:{featureIds:[[e.id,i]]},id:e.id+"-"+i,geometry:{type:n,coordinates:r}})})}).bind(a))})),t.forEach((e=>this.addFeature(e.vertex)).bind(this)),r.features=i,r.vertices=t,r.points=t};return t(),r.moveendCallback=t,this.map.on("moveend",t),r},P.fireUpdate=function(e){this.map.fire(i,{action:"Pinning",features:e})},P.onMouseDown=function(e,r){r.featureTarget&&(e.selectedPointID=r.featureTarget.properties.id),this.originalOnMouseDown.call(this,e,r)},P.update=function(e,r){if(!e.selectedPointID)return;const t=this.getSelected()[0];let o=[];t.properties.featureIds.forEach((([r,n])=>{const i=e.draw.get(r);i.geometry.coordinates[0][n]=t.coordinates,o.push(i);var a=i.geometry.coordinates[0][0],s=i.geometry.coordinates[0][i.geometry.coordinates[0].length-1];a[0]==s[0]&&a[1]==s[1]||(i.geometry.coordinates[0][i.geometry.coordinates[0].length-1]=a),e.draw.add(i),e.draw.add(i)})),this.fireUpdate(o)},P.onMouseUp=function(e,r){e.selectedPointID=null,this.update(e,r),this.originalOnMouseUp.call(this,e,r)},P.onDrag=function(e,r){this.originalOnDrag.call(this,e,r),this.update(e,r)},P.clickAnywhere=function(e){this.onStop(e),this.originalClickAnywhere(e)},P.onStop=function(e){this.map.off("moveend",e.moveendCallback),this.deleteFeature(e.vertices.map((({vertex:e})=>e.id)),{silent:!0}),a.enable(this)},P}();
